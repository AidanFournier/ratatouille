"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LoadingSpinner = void 0;

var _base = _interopRequireDefault(require("@emotion/styled/base"));

var _react = require("@emotion/react");

var _tablekitSpinner = require("@tablecheck/tablekit-spinner");

var _types = require("../types.js");

var _jsxRuntime = require("@emotion/react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _EMOTION_STRINGIFIED_CSS_ERROR__() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}

var ButtonLoadingWrapper = (0, _base.default)("div", process.env.NODE_ENV === "production" ? {
  target: "e1i4e4z50"
} : {
  target: "e1i4e4z50",
  label: "ButtonLoadingWrapper"
})(process.env.NODE_ENV === "production" ? {
  name: "yqtalo",
  styles: "margin-top:2px;position:absolute;left:50%;top:50%;transform:translate(-50%, -50%)"
} : {
  name: "yqtalo",
  styles: "margin-top:2px;position:absolute;left:50%;top:50%;transform:translate(-50%, -50%)",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var spinnerTheme = _defineProperty({}, _tablekitSpinner.spinnerThemeNamespace, {
  fillColor: 'currentColor'
});

function composeSpinnerSize(buttonSize) {
  if (buttonSize === _types.ButtonSize.Large) return _tablekitSpinner.SpinnerSize.Large;
  return _tablekitSpinner.SpinnerSize.Regular;
}

var LoadingSpinner = function LoadingSpinner(_ref) {
  var buttonSize = _ref.size;
  var spinnerSize;

  if (_typeof(buttonSize) === 'object') {
    spinnerSize = Object.keys(buttonSize).reduce(function (result, breakpoint) {
      return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, breakpoint, composeSpinnerSize(buttonSize[breakpoint])));
    }, {});
  } else {
    spinnerSize = composeSpinnerSize(buttonSize);
  }

  return (0, _jsxRuntime.jsx)(_react.ThemeProvider, {
    theme: spinnerTheme,
    children: (0, _jsxRuntime.jsx)(ButtonLoadingWrapper, {
      children: (0, _jsxRuntime.jsx)(_tablekitSpinner.Spinner, {
        size: spinnerSize
      })
    })
  });
};

exports.LoadingSpinner = LoadingSpinner;
