function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import _styled from '@emotion/styled/base';
import { Icon } from './Icon.js';
import { getIcon } from './utils.js';
import { jsx } from '@emotion/react/jsx-runtime';

var WarningIconElement = /*#__PURE__*/_styled(Icon, process.env.NODE_ENV === "production" ? {
  target: "e1lt73h32"
} : {
  target: "e1lt73h32",
  label: "WarningIconElement"
})("color:", function (_ref) {
  var theme = _ref.theme;
  return theme.colors.warning;
}, ";");

var WarningIcon = function WarningIcon(props) {
  return jsx(WarningIconElement, _objectSpread(_objectSpread({}, props), {}, {
    icon: getIcon('warning')
  }));
};

var SuccessIconElement = /*#__PURE__*/_styled(Icon, process.env.NODE_ENV === "production" ? {
  target: "e1lt73h31"
} : {
  target: "e1lt73h31",
  label: "SuccessIconElement"
})("color:", function (_ref2) {
  var theme = _ref2.theme;
  return theme.colors.success;
}, ";");

var SuccessIcon = function SuccessIcon(props) {
  return jsx(SuccessIconElement, _objectSpread(_objectSpread({}, props), {}, {
    icon: getIcon('success')
  }));
};

var DangerIconElement = /*#__PURE__*/_styled(Icon, process.env.NODE_ENV === "production" ? {
  target: "e1lt73h30"
} : {
  target: "e1lt73h30",
  label: "DangerIconElement"
})("color:", function (_ref3) {
  var theme = _ref3.theme;
  return theme.colors.danger;
}, ";");

var DangerIcon = function DangerIcon(props) {
  return jsx(DangerIconElement, _objectSpread(_objectSpread({}, props), {}, {
    icon: getIcon('danger')
  }));
};

export { DangerIcon, SuccessIcon, WarningIcon };
