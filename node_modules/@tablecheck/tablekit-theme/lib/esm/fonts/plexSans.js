import { css } from '@emotion/react';
import { getCdnPath, buildPreloadLink, buildFontFace } from './buildFontFace.js';
import { FontWeight } from './weights.js';
var name = 'IBM Plex Sans';
var folder = 'IBMPlex-Sans';

function plexSansFont(fontWeights) {
  var sourceSansProExtraLightWoff = getCdnPath(folder, 'IBMPlexSans-ExtraLight.woff');
  var sourceSansProExtraLightWoff2 = getCdnPath(folder, 'IBMPlexSans-ExtraLight.woff2');
  var sourceSansProExtraLightItalicWoff = getCdnPath(folder, 'IBMPlexSans-ExtraLightItalic.woff');
  var sourceSansProExtraLightItalicWoff2 = getCdnPath(folder, 'IBMPlexSans-ExtraLightItalic.woff2');
  var sourceSansProLightWoff = getCdnPath(folder, 'IBMPlexSans-Light.woff');
  var sourceSansProLightWoff2 = getCdnPath(folder, 'IBMPlexSans-Light.woff2');
  var sourceSansProLightItalicWoff = getCdnPath(folder, 'IBMPlexSans-LightItalic.woff');
  var sourceSansProLightItalicWoff2 = getCdnPath(folder, 'IBMPlexSans-LightItalic.woff2');
  var sourceSansProRegularWoff = getCdnPath(folder, 'IBMPlexSans-Regular.woff');
  var sourceSansProRegularWoff2 = getCdnPath(folder, 'IBMPlexSans-Regular.woff2');
  var sourceSansProRegularItalicWoff = getCdnPath(folder, 'IBMPlexSans-Italic.woff');
  var sourceSansProRegularItalicWoff2 = getCdnPath(folder, 'IBMPlexSans-Italic.woff2');
  var sourceSansProMediumWoff = getCdnPath(folder, 'IBMPlexSans-Medium.woff');
  var sourceSansProMediumWoff2 = getCdnPath(folder, 'IBMPlexSans-Medium.woff2');
  var sourceSansProMediumItalicWoff = getCdnPath(folder, 'IBMPlexSans-MediumItalic.woff');
  var sourceSansProMediumItalicWoff2 = getCdnPath(folder, 'IBMPlexSans-MediumItalic.woff2');
  var sourceSansProSemiBoldWoff = getCdnPath(folder, 'IBMPlexSans-SemiBold.woff');
  var sourceSansProSemiBoldWoff2 = getCdnPath(folder, 'IBMPlexSans-SemiBold.woff2');
  var sourceSansProSemiBoldItalicWoff = getCdnPath(folder, 'IBMPlexSans-SemiBoldItalic.woff');
  var sourceSansProSemiBoldItalicWoff2 = getCdnPath(folder, 'IBMPlexSans-SemiBoldItalic.woff2');
  var sourceSansProBoldWoff = getCdnPath(folder, 'IBMPlexSans-Bold.woff');
  var sourceSansProBoldWoff2 = getCdnPath(folder, 'IBMPlexSans-Bold.woff2');
  var sourceSansProBoldItalicWoff = getCdnPath(folder, 'IBMPlexSans-BoldItalic.woff');
  var sourceSansProBoldItalicWoff2 = getCdnPath(folder, 'IBMPlexSans-BoldItalic.woff2');
  var preloadLinks = fontWeights.reduce(function (result, fontWeight) {
    if (fontWeight === FontWeight.ExtraLight) {
      return result.concat([buildPreloadLink(sourceSansProExtraLightWoff2), buildPreloadLink(sourceSansProExtraLightItalicWoff2)]);
    }

    if (fontWeight === FontWeight.Light) {
      return result.concat([buildPreloadLink(sourceSansProLightWoff2), buildPreloadLink(sourceSansProLightItalicWoff2)]);
    }

    if (fontWeight === FontWeight.Regular) {
      return result.concat([buildPreloadLink(sourceSansProRegularWoff2), buildPreloadLink(sourceSansProRegularItalicWoff2)]);
    }

    if (fontWeight === FontWeight.Medium) {
      return result.concat([buildPreloadLink(sourceSansProMediumWoff2), buildPreloadLink(sourceSansProMediumItalicWoff2)]);
    }

    if (fontWeight === FontWeight.SemiBold) {
      return result.concat([buildPreloadLink(sourceSansProSemiBoldWoff2), buildPreloadLink(sourceSansProSemiBoldItalicWoff2)]);
    }

    if (fontWeight === FontWeight.Bold) {
      return result.concat([buildPreloadLink(sourceSansProBoldWoff2), buildPreloadLink(sourceSansProBoldItalicWoff2)]);
    }

    return result;
  }, []);
  return [preloadLinks, /*#__PURE__*/css(buildFontFace({
    name: name,
    weight: FontWeight.ExtraLight,
    woff: sourceSansProExtraLightWoff,
    woff2: sourceSansProExtraLightWoff2
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.ExtraLight,
    woff: sourceSansProExtraLightItalicWoff,
    woff2: sourceSansProExtraLightItalicWoff2,
    isItalic: true
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.Light,
    woff: sourceSansProLightWoff,
    woff2: sourceSansProLightWoff2
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.Light,
    woff: sourceSansProLightItalicWoff,
    woff2: sourceSansProLightItalicWoff2,
    isItalic: true
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.Regular,
    woff: sourceSansProRegularWoff,
    woff2: sourceSansProRegularWoff2
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.Regular,
    woff: sourceSansProRegularItalicWoff,
    woff2: sourceSansProRegularItalicWoff2,
    isItalic: true
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.Medium,
    woff: sourceSansProMediumWoff,
    woff2: sourceSansProMediumWoff2
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.Medium,
    woff: sourceSansProMediumItalicWoff,
    woff2: sourceSansProMediumItalicWoff2,
    isItalic: true
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.SemiBold,
    woff: sourceSansProSemiBoldWoff,
    woff2: sourceSansProSemiBoldWoff2
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.SemiBold,
    woff: sourceSansProSemiBoldItalicWoff,
    woff2: sourceSansProSemiBoldItalicWoff2,
    isItalic: true
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.Bold,
    woff: sourceSansProBoldWoff,
    woff2: sourceSansProBoldWoff2
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.Bold,
    woff: sourceSansProBoldItalicWoff,
    woff2: sourceSansProBoldItalicWoff2,
    isItalic: true
  }), ";" + (process.env.NODE_ENV === "production" ? "" : ";label:plexSansFont;"))];
}

export { plexSansFont };
