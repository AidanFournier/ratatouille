import { css } from '@emotion/react';
import { getCdnPath, buildPreloadLink, buildFontFace } from './buildFontFace.js';
import { FontWeight } from './weights.js';
var name = 'IBM Plex Sans Arabic';
var folder = 'IBMPlex-Sans-Arabic';

function plexSansArabicFont(fontWeights) {
  var sourceSansArabicExtraLightWoff = getCdnPath(folder, 'IBMPlexSansArabic-ExtraLight.woff');
  var sourceSansArabicExtraLightWoff2 = getCdnPath(folder, 'IBMPlexSansArabic-ExtraLight.woff2');
  var sourceSansArabicLightWoff = getCdnPath(folder, 'IBMPlexSansArabic-Light.woff');
  var sourceSansArabicLightWoff2 = getCdnPath(folder, 'IBMPlexSansArabic-Light.woff2');
  var sourceSansArabicRegularWoff = getCdnPath(folder, 'IBMPlexSansArabic-Regular.woff');
  var sourceSansArabicRegularWoff2 = getCdnPath(folder, 'IBMPlexSansArabic-Regular.woff2');
  var sourceSansArabicMediumWoff = getCdnPath(folder, 'IBMPlexSansArabic-Medium.woff');
  var sourceSansArabicMediumWoff2 = getCdnPath(folder, 'IBMPlexSansArabic-Medium.woff2');
  var sourceSansArabicSemiBoldWoff = getCdnPath(folder, 'IBMPlexSansArabic-SemiBold.woff');
  var sourceSansArabicSemiBoldWoff2 = getCdnPath(folder, 'IBMPlexSansArabic-SemiBold.woff2');
  var sourceSansArabicBoldWoff = getCdnPath(folder, 'IBMPlexSansArabic-Bold.woff');
  var sourceSansArabicBoldWoff2 = getCdnPath(folder, 'IBMPlexSansArabic-Bold.woff2');
  var preloadLinks = fontWeights.reduce(function (result, fontWeight) {
    if (fontWeight === FontWeight.ExtraLight) {
      return result.concat([buildPreloadLink(sourceSansArabicExtraLightWoff2)]);
    }

    if (fontWeight === FontWeight.Light) {
      return result.concat([buildPreloadLink(sourceSansArabicLightWoff2)]);
    }

    if (fontWeight === FontWeight.Regular) {
      return result.concat([buildPreloadLink(sourceSansArabicRegularWoff2)]);
    }

    if (fontWeight === FontWeight.Medium) {
      return result.concat([buildPreloadLink(sourceSansArabicMediumWoff2)]);
    }

    if (fontWeight === FontWeight.SemiBold) {
      return result.concat([buildPreloadLink(sourceSansArabicSemiBoldWoff2)]);
    }

    if (fontWeight === FontWeight.Bold) {
      return result.concat([buildPreloadLink(sourceSansArabicBoldWoff2)]);
    }

    return result;
  }, []);
  return [preloadLinks, /*#__PURE__*/css(buildFontFace({
    name: name,
    weight: FontWeight.ExtraLight,
    woff: sourceSansArabicExtraLightWoff,
    woff2: sourceSansArabicExtraLightWoff2
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.Light,
    woff: sourceSansArabicLightWoff,
    woff2: sourceSansArabicLightWoff2
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.Regular,
    woff: sourceSansArabicRegularWoff,
    woff2: sourceSansArabicRegularWoff2
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.Medium,
    woff: sourceSansArabicMediumWoff,
    woff2: sourceSansArabicMediumWoff2
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.SemiBold,
    woff: sourceSansArabicSemiBoldWoff,
    woff2: sourceSansArabicSemiBoldWoff2
  }), " ", buildFontFace({
    name: name,
    weight: FontWeight.Bold,
    woff: sourceSansArabicBoldWoff,
    woff2: sourceSansArabicBoldWoff2
  }), ";" + (process.env.NODE_ENV === "production" ? "" : ";label:plexSansArabicFont;"))];
}

export { plexSansArabicFont };
