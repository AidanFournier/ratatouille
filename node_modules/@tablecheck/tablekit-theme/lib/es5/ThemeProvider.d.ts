import { Theme } from '@emotion/react';
import { ReactNode } from 'react';
import { FontWeight } from './fonts/weights';
/**
 * IMPORTANT: Any changes to the exports of this file need to be mirrored inside
 * the root ThemeProvider.d.ts
 */
declare type PropsType = {
    children: ReactNode;
    /** Optional Country to resolve typography and fonts */
    country?: string;
    /** all font weights passed in here will be pre-loaded */
    fontWeights?: FontWeight[];
    /** Optional flag to indicate the theme has dark colors */
    isDark?: boolean;
    /** Optional Locale to resolve typography and fonts */
    locale?: string;
    /** Function used to render the head nodes correctly,
     * required if `useLocalStyles` is false
     * usually `(nodes) => <Helmet>{nodes}</Helmet>` */
    renderHeadNodes?: (nodes: ReactNode[]) => ReactNode;
    /** Optional Theme value to pass through to emotion-theming's ThemeProvider */
    theme?: Partial<Theme>;
    /** If true the font and typography styles will be restricted to this component */
    useLocalStyles?: boolean;
};
export declare const ThemeProvider: ({ country, locale, children, theme, useLocalStyles, isDark, fontWeights, renderHeadNodes }: PropsType) => JSX.Element;
export {};
