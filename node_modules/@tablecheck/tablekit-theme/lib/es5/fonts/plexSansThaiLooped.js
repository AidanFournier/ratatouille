"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.plexSansThaiLoopedFont = plexSansThaiLoopedFont;

var _react = require("@emotion/react");

var _buildFontFace = require("./buildFontFace.js");

var _weights = require("./weights.js");

var name = 'IBM Plex Sans Thai Looped';
var folder = 'IBMPlex-Sans-Thai-Looped';

function plexSansThaiLoopedFont(fontWeights) {
  var sourceSansThaiLoopedExtraLightWoff = (0, _buildFontFace.getCdnPath)(folder, 'IBMPlexSansThaiLooped-ExtraLight.woff');
  var sourceSansThaiLoopedExtraLightWoff2 = (0, _buildFontFace.getCdnPath)(folder, 'IBMPlexSansThaiLooped-ExtraLight.woff2');
  var sourceSansThaiLoopedLightWoff = (0, _buildFontFace.getCdnPath)(folder, 'IBMPlexSansThaiLooped-Light.woff');
  var sourceSansThaiLoopedLightWoff2 = (0, _buildFontFace.getCdnPath)(folder, 'IBMPlexSansThaiLooped-Light.woff2');
  var sourceSansThaiLoopedRegularWoff = (0, _buildFontFace.getCdnPath)(folder, 'IBMPlexSansThaiLooped-Regular.woff');
  var sourceSansThaiLoopedRegularWoff2 = (0, _buildFontFace.getCdnPath)(folder, 'IBMPlexSansThaiLooped-Regular.woff2');
  var sourceSansThaiLoopedMediumWoff = (0, _buildFontFace.getCdnPath)(folder, 'IBMPlexSansThaiLooped-Medium.woff');
  var sourceSansThaiLoopedMediumWoff2 = (0, _buildFontFace.getCdnPath)(folder, 'IBMPlexSansThaiLooped-Medium.woff2');
  var sourceSansThaiLoopedSemiBoldWoff = (0, _buildFontFace.getCdnPath)(folder, 'IBMPlexSansThaiLooped-SemiBold.woff');
  var sourceSansThaiLoopedSemiBoldWoff2 = (0, _buildFontFace.getCdnPath)(folder, 'IBMPlexSansThaiLooped-SemiBold.woff2');
  var sourceSansThaiLoopedBoldWoff = (0, _buildFontFace.getCdnPath)(folder, 'IBMPlexSansThaiLooped-Bold.woff');
  var sourceSansThaiLoopedBoldWoff2 = (0, _buildFontFace.getCdnPath)(folder, 'IBMPlexSansThaiLooped-Bold.woff2');
  var preloadLinks = fontWeights.reduce(function (result, fontWeight) {
    if (fontWeight === _weights.FontWeight.ExtraLight) {
      return result.concat([(0, _buildFontFace.buildPreloadLink)(sourceSansThaiLoopedExtraLightWoff2)]);
    }

    if (fontWeight === _weights.FontWeight.Light) {
      return result.concat([(0, _buildFontFace.buildPreloadLink)(sourceSansThaiLoopedLightWoff2)]);
    }

    if (fontWeight === _weights.FontWeight.Regular) {
      return result.concat([(0, _buildFontFace.buildPreloadLink)(sourceSansThaiLoopedRegularWoff2)]);
    }

    if (fontWeight === _weights.FontWeight.Medium) {
      return result.concat([(0, _buildFontFace.buildPreloadLink)(sourceSansThaiLoopedMediumWoff2)]);
    }

    if (fontWeight === _weights.FontWeight.SemiBold) {
      return result.concat([(0, _buildFontFace.buildPreloadLink)(sourceSansThaiLoopedSemiBoldWoff2)]);
    }

    if (fontWeight === _weights.FontWeight.Bold) {
      return result.concat([(0, _buildFontFace.buildPreloadLink)(sourceSansThaiLoopedBoldWoff2)]);
    }

    return result;
  }, []);
  return [preloadLinks, /*#__PURE__*/(0, _react.css)((0, _buildFontFace.buildFontFace)({
    name: name,
    weight: _weights.FontWeight.ExtraLight,
    woff: sourceSansThaiLoopedExtraLightWoff,
    woff2: sourceSansThaiLoopedExtraLightWoff2
  }), " ", (0, _buildFontFace.buildFontFace)({
    name: name,
    weight: _weights.FontWeight.Light,
    woff: sourceSansThaiLoopedLightWoff,
    woff2: sourceSansThaiLoopedLightWoff2
  }), " ", (0, _buildFontFace.buildFontFace)({
    name: name,
    weight: _weights.FontWeight.Regular,
    woff: sourceSansThaiLoopedRegularWoff,
    woff2: sourceSansThaiLoopedRegularWoff2
  }), " ", (0, _buildFontFace.buildFontFace)({
    name: name,
    weight: _weights.FontWeight.Medium,
    woff: sourceSansThaiLoopedMediumWoff,
    woff2: sourceSansThaiLoopedMediumWoff2
  }), " ", (0, _buildFontFace.buildFontFace)({
    name: name,
    weight: _weights.FontWeight.SemiBold,
    woff: sourceSansThaiLoopedSemiBoldWoff,
    woff2: sourceSansThaiLoopedSemiBoldWoff2
  }), " ", (0, _buildFontFace.buildFontFace)({
    name: name,
    weight: _weights.FontWeight.Bold,
    woff: sourceSansThaiLoopedBoldWoff,
    woff2: sourceSansThaiLoopedBoldWoff2
  }), ";" + (process.env.NODE_ENV === "production" ? "" : ";label:plexSansThaiLoopedFont;"))];
}
