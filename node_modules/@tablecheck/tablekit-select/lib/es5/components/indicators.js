"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WarningIndicator = exports.SuccessIndicator = exports.LoadingIndicator = exports.ErrorIndicator = exports.DropdownIndicator = exports.ClearIndicator = void 0;

var _react = require("@emotion/react");

var _tablekitIcon = require("@tablecheck/tablekit-icon");

var _tablekitSpinner = require("@tablecheck/tablekit-spinner");

var _reactSelect = require("react-select");

var _jsxRuntime = require("@emotion/react/jsx-runtime");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ClearIndicator = function ClearIndicator(props) {
  return (0, _jsxRuntime.jsx)(_reactSelect.components.ClearIndicator, _objectSpread(_objectSpread({}, props), {}, {
    children: (0, _jsxRuntime.jsx)(_tablekitIcon.Icon, {
      icon: (0, _tablekitIcon.getIcon)('close')
    })
  }));
};

exports.ClearIndicator = ClearIndicator;

var DropdownIndicator = function DropdownIndicator(props) {
  return (0, _jsxRuntime.jsx)(_reactSelect.components.DropdownIndicator, _objectSpread(_objectSpread({}, props), {}, {
    children: (0, _jsxRuntime.jsx)(_tablekitIcon.Icon, {
      icon: (0, _tablekitIcon.getIcon)('chevronDown')
    })
  }));
};

exports.DropdownIndicator = DropdownIndicator;

var SuccessIndicator = function SuccessIndicator(props) {
  return (0, _jsxRuntime.jsx)(_reactSelect.components.DropdownIndicator, _objectSpread(_objectSpread({}, props), {}, {
    children: (0, _jsxRuntime.jsx)(_tablekitIcon.SuccessIcon, {})
  }));
};

exports.SuccessIndicator = SuccessIndicator;

var WarningIndicator = function WarningIndicator(props) {
  return (0, _jsxRuntime.jsx)(_reactSelect.components.DropdownIndicator, _objectSpread(_objectSpread({}, props), {}, {
    children: (0, _jsxRuntime.jsx)(_tablekitIcon.WarningIcon, {})
  }));
};

exports.WarningIndicator = WarningIndicator;

var ErrorIndicator = function ErrorIndicator(props) {
  return (0, _jsxRuntime.jsx)(_reactSelect.components.DropdownIndicator, _objectSpread(_objectSpread({}, props), {}, {
    children: (0, _jsxRuntime.jsx)(_tablekitIcon.DangerIcon, {})
  }));
};

exports.ErrorIndicator = ErrorIndicator;

var LoadingIndicator = function LoadingIndicator() {
  var theme = (0, _react.useTheme)();
  return (0, _jsxRuntime.jsx)(_tablekitSpinner.Spinner, {
    color: theme.colors.secondary
  });
};

exports.LoadingIndicator = LoadingIndicator;
