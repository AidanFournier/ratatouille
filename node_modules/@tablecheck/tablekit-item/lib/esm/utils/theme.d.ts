/// <reference types="react" />
import { ItemContainerProps, ItemInteractionState } from '../types';
export declare const borderWidth = "2px";
export declare const focusOutlineRadius = "6px";
export declare const ElementBefore: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & {
    children?: import("react").ReactNode;
} & {
    theme?: import("@emotion/react").Theme | undefined;
} & Pick<ItemContainerProps<"span">, "hasOnlyIcon" | "size">, {}, {}>;
export declare const ElementAfter: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & {
    children?: import("react").ReactNode;
} & {
    theme?: import("@emotion/react").Theme | undefined;
} & Pick<ItemContainerProps<"span">, "hasOnlyIcon" | "size">, {}, {}>;
export declare const interactionStates: (props: import("@tablecheck/tablekit-utils").VariantProps<import("../types").BaseItemProps & {
    component?: "span" | undefined;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "key" | keyof import("react").HTMLAttributes<HTMLSpanElement>>, "component"> & {
    hasOnlyIcon: boolean;
    interactionState?: ItemInteractionState | undefined;
} & {
    theme: import("@emotion/react").Theme;
}>) => import("@emotion/serialize").CSSInterpolation;
export declare const getSizeStyle: (props: import("@tablecheck/tablekit-utils").VariantProps<import("../types").BaseItemProps & {
    component?: "span" | undefined;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "key" | keyof import("react").HTMLAttributes<HTMLSpanElement>>, "component"> & {
    hasOnlyIcon: boolean;
    interactionState?: ItemInteractionState | undefined;
} & {
    theme: import("@emotion/react").Theme;
}>) => import("@emotion/serialize").CSSInterpolation;
