"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mediaQuery = mediaQuery;

var _react = require("@emotion/react");

var _isFunction = _interopRequireDefault(require("lodash/isFunction"));

var _isObject = _interopRequireDefault(require("lodash/isObject"));

var _isString = _interopRequireDefault(require("lodash/isString"));

var _propsEvalOrReturn = require("./propsEvalOrReturn.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function mediaQuery(queriesOrGetter, renderer, defaultQueriesOrValue) {
  return function (props) {
    var queries = queriesOrGetter;

    if ((0, _isFunction.default)(queriesOrGetter)) {
      queries = queriesOrGetter(props);
    } else if ((0, _isString.default)(queriesOrGetter)) {
      queries = props[queriesOrGetter];
    }

    if (!queries && defaultQueriesOrValue) {
      if (!(0, _isObject.default)(defaultQueriesOrValue)) {
        return (0, _propsEvalOrReturn.propsEvalOrReturn)(renderer(defaultQueriesOrValue), props);
      }

      queries = defaultQueriesOrValue;
    } // This handles if the prop value is _not_ being used as a media query object


    if (!(0, _isObject.default)(queries)) {
      return (0, _propsEvalOrReturn.propsEvalOrReturn)(renderer(queries), props);
    }

    var mediaQueries = Object.keys(queries);
    var cssMediaQueries = [];
    var defaultQueryValue;

    for (var i = 0; i < mediaQueries.length; i += 1) {
      var query = mediaQueries[i];

      if (query === 'default') {
        defaultQueryValue = queries[query];
      } else {
        var queryString = query;

        if (queryString.indexOf('(') === -1) {
          queryString = "(".concat(query, ")");
        }

        cssMediaQueries.push( /*#__PURE__*/(0, _react.css)("@media ", queryString, "{", (0, _propsEvalOrReturn.propsEvalOrReturn)(renderer(queries[query]), props) || '', ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:mediaQuery;")));
      }
    }

    var defaultStyles = '';

    if (defaultQueryValue) {
      defaultStyles = (0, _propsEvalOrReturn.propsEvalOrReturn)(renderer(defaultQueryValue), props) || '';
    }

    if (defaultStyles) {
      cssMediaQueries.unshift( /*#__PURE__*/(0, _react.css)(defaultStyles, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:mediaQuery;")));
    }

    return /*#__PURE__*/_react.css.apply(void 0, cssMediaQueries);
  };
}
