import { Theme } from '@emotion/react';
import { CSSInterpolation, SerializedStyles } from '@emotion/serialize';
interface BaseProps {
}
declare type PropsWithTheme<Props extends BaseProps> = Props & {
    theme: Theme;
};
export interface MediaQueryFromProps<Value extends CSSInterpolation, Props extends BaseProps = {
    theme: Theme;
}> {
    (props: Props): MediaQueryObject<Value>;
}
declare type MediaQueryObject<Value> = {
    [breakpoint: string]: Value;
};
export declare type MediaQuery<Value> = Value | MediaQueryObject<Value>;
export declare type MediaQueryGetter<Value extends CSSInterpolation, Props extends BaseProps = {
    theme: Theme;
}> = keyof Props | MediaQueryObject<Value> | MediaQueryFromProps<Value, Props>;
export declare function mediaQuery<Value extends CSSInterpolation, Props extends BaseProps = {
    theme: Theme;
}>(queriesOrGetter: MediaQueryGetter<Value, Props>, renderer: (queryValue: Value) => CSSInterpolation, defaultQueriesOrValue?: Value | MediaQueryObject<Value>): (props: PropsWithTheme<Props>) => SerializedStyles;
export {};
