/// <reference types="react" />
import { ButtonShape } from '@tablecheck/tablekit-button';
import { MediaQuery } from '@tablecheck/tablekit-utils';
import { InputButtonProps } from './types';
export declare const SelectedIcon: import("@emotion/styled").StyledComponent<import("react").SVGAttributes<SVGElement> & {
    className?: string | undefined;
    colors?: string[] | undefined;
    icon: import("@tablecheck/tablekit-icon").IconDefinition;
    opacities?: (string | number)[] | undefined;
    size?: MediaQuery<import("@tablecheck/tablekit-theme").Size> | undefined;
} & {
    useVariantAsClass?: string | string[] | undefined;
} & import("react").RefAttributes<SVGSVGElement> & {
    theme?: import("@emotion/react").Theme | undefined;
}, {}, {}>;
export declare const ButtonLabel: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
}, import("react").DetailedHTMLProps<import("react").LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, {}>;
interface DisplayProps {
    shape: MediaQuery<ButtonShape>;
    fieldSize: MediaQuery<InputButtonProps['size']>;
}
export declare const ButtonDisplay: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & DisplayProps, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const TextWrapper: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const HiddenInput: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & DisplayProps, import("react").DetailedHTMLProps<import("react").InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, {}>;
export {};
