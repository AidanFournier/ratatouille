import { ElementType } from 'react';
import { ModalBodyProps, ModalFooterProps, ModalHeaderProps, ModalTitleProps } from './types';
export declare const ModalRoot: import("react").FC<import("@radix-ui/react-dialog").DialogProps>;
export declare const ModalOverlay: import("react-spring").AnimatedComponent<ElementType<any>>;
export declare const ModalContent: import("react-spring").AnimatedComponent<ElementType<any>>;
export declare const ModalBody: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: ElementType<any> | undefined;
} & ModalBodyProps, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const ModalTitle: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: ElementType<any> | undefined;
} & ModalTitleProps, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, {}>;
export declare const HeaderWrapper: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: ElementType<any> | undefined;
} & import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & {
    children?: import("react").ReactNode;
} & {
    theme?: import("@emotion/react").Theme | undefined;
} & ModalHeaderProps, {}, {}>;
export declare const FooterWrapper: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: ElementType<any> | undefined;
} & import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & {
    children?: import("react").ReactNode;
} & {
    theme?: import("@emotion/react").Theme | undefined;
} & ModalFooterProps, {}, {}>;
