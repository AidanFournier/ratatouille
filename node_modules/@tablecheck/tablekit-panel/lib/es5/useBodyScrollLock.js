"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useBodyScrollLock = void 0;

var _bodyScrollLock = require("body-scroll-lock");

var _react = require("react");

var _jsxRuntime = require("@emotion/react/jsx-runtime");

var OBSERVER_CLASS_NAME = 'PanelScrollObserver';

var useBodyScrollLock = function useBodyScrollLock(_ref) {
  var shouldDisableBodyScroll = _ref.shouldDisableBodyScroll,
      containerRef = _ref.containerRef,
      isOpen = _ref.isOpen;
  (0, _react.useEffect)(function () {
    var element = containerRef.current;

    if (shouldDisableBodyScroll && element) {
      if (isOpen) {
        (0, _bodyScrollLock.disableBodyScroll)(element, {
          allowTouchMove: function allowTouchMove(el) {
            while (el && el !== document.body) {
              if (el.getAttribute('data-ignore') === 'scroll-lock-ignore') {
                return true;
              } // eslint-disable-next-line no-param-reassign


              el = el.parentElement;
            }

            return false;
          }
        });
      } else {
        (0, _bodyScrollLock.enableBodyScroll)(element);
      }
    }
  }, [containerRef, isOpen, shouldDisableBodyScroll]);
  (0, _react.useEffect)(function () {
    return function () {
      if (shouldDisableBodyScroll) {
        var hasOpenedPanel = document.getElementsByClassName(OBSERVER_CLASS_NAME).length > 0;

        if (!hasOpenedPanel) {
          (0, _bodyScrollLock.clearAllBodyScrollLocks)();
        }
      }
    };
  }, [shouldDisableBodyScroll]);
  var observer = isOpen && shouldDisableBodyScroll ? (0, _jsxRuntime.jsx)("div", {
    style: {
      display: 'none'
    },
    className: OBSERVER_CLASS_NAME
  }) : null;
  return observer;
};

exports.useBodyScrollLock = useBodyScrollLock;
