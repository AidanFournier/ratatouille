/// <reference types="react" />
import { SerializedStyles } from '@emotion/react';
import { FieldHeight } from '@tablecheck/tablekit-theme';
import type { ThemeOnlyProps } from '@tablecheck/tablekit-utils';
import { InputProps, InputShape, InputFieldProps, InputSize } from '../types';
export declare const getBorderRadius: (fieldHeight: FieldHeight, shape?: InputShape) => string | number;
export declare function getContext(props: Pick<InputProps, 'appearance'> & ThemeOnlyProps): SerializedStyles;
export declare const getContainerShape: (props: import("@tablecheck/tablekit-utils").VariantProps<Pick<InputFieldProps, "shape" | "fieldSize"> & {
    theme: import("@emotion/react").Theme;
}>) => import("@emotion/serialize").CSSInterpolation;
export declare const getPadding: (props: import("@tablecheck/tablekit-utils").VariantProps<Omit<import("react").InputHTMLAttributes<HTMLInputElement>, "size"> & import("../types").BaseInputProps & {
    fieldSize: import("@tablecheck/tablekit-utils").MediaQuery<InputSize> | undefined;
    hasIconAfter: boolean;
    hasIconBefore: boolean;
} & {
    theme: import("@emotion/react").Theme;
}>) => import("@emotion/serialize").CSSInterpolation;
