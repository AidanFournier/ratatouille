"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inputThemeNamespace = exports.inputDarkTheme = exports.inputClassicTheme = exports.INPUT_WIDTHS = void 0;

var _tablekitPackageNamespace = require("@tablecheck/tablekit-package-namespace");

var _tablekitTheme = require("@tablecheck/tablekit-theme");

var _INPUT_WIDTHS;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var INPUT_WIDTHS = (_INPUT_WIDTHS = {}, _defineProperty(_INPUT_WIDTHS, _tablekitTheme.Size.XSmall, '64px'), _defineProperty(_INPUT_WIDTHS, _tablekitTheme.Size.Small, '128px'), _defineProperty(_INPUT_WIDTHS, _tablekitTheme.Size.Regular, '180px'), _defineProperty(_INPUT_WIDTHS, _tablekitTheme.Size.Regular2, '218px'), _defineProperty(_INPUT_WIDTHS, _tablekitTheme.Size.Large, '256px'), _defineProperty(_INPUT_WIDTHS, _tablekitTheme.Size.XLarge, '330px'), _defineProperty(_INPUT_WIDTHS, _tablekitTheme.Size.XXLarge, '368px'), _INPUT_WIDTHS);
exports.INPUT_WIDTHS = INPUT_WIDTHS;
var inputThemeNamespace = _tablekitPackageNamespace.PackageNamespace.Input;
exports.inputThemeNamespace = inputThemeNamespace;
var inputClassicTheme = {
  label: {
    textColor: function textColor(_ref) {
      var theme = _ref.theme;
      return theme.colors.text;
    }
  },
  error: {
    textColor: function textColor(_ref2) {
      var theme = _ref2.theme;
      return theme.colors.text;
    }
  },
  input: {
    default: {
      backgroundColor: function backgroundColor(_ref3) {
        var theme = _ref3.theme;
        return theme.colors.inputBackground;
      },
      borderColor: function borderColor(_ref4) {
        var theme = _ref4.theme;
        return theme.colors.border;
      },
      textColor: function textColor(_ref5) {
        var theme = _ref5.theme;
        return theme.colors.text;
      },
      placeholderColor: function placeholderColor(_ref6) {
        var theme = _ref6.theme;
        return theme.colors.textSubtle;
      },
      iconColor: function iconColor(_ref7) {
        var theme = _ref7.theme;
        return theme.colors.primary2;
      }
    },
    disabled: {
      borderColor: function borderColor(_ref8) {
        var theme = _ref8.theme;
        return theme.colors.border;
      },
      textColor: function textColor(_ref9) {
        var theme = _ref9.theme;
        return theme.colors.textSubtle;
      },
      iconColor: function iconColor(_ref10) {
        var theme = _ref10.theme;
        return theme.colors.textSubtle;
      }
    }
  }
};
exports.inputClassicTheme = inputClassicTheme;
var inputDarkTheme = inputClassicTheme;
exports.inputDarkTheme = inputDarkTheme;
