{"ast":null,"code":"import _slicedToArray from \"/Users/aidandouglas/code/AidanFournier/ratatouille/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/aidandouglas/code/AidanFournier/ratatouille/src/router.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { ordered as orderedLocales } from '@tablecheck/locales';\nimport { useTranslation } from 'react-i18next';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Restaurants } from 'Pages/Restaurants';\nimport { About } from 'Pages/About';\nimport { Home } from 'Pages/Home';\nimport { ReportIssue } from 'Pages/ReportIssue';\nimport { AppRoute } from 'enums';\nimport { PageLayout } from './Layouts/Page';\nexport var SUPPORTED_LOCALES = orderedLocales.map(_c = function _c(_ref) {\n  var code = _ref.code;\n  return code;\n});\n_c2 = SUPPORTED_LOCALES;\nexport function Router(_ref2) {\n  _s();\n  var isDarkMode = _ref2.isDarkMode,\n    setDarkMode = _ref2.setDarkMode;\n  var _useTranslation = useTranslation(),\n    _useTranslation2 = _slicedToArray(_useTranslation, 2),\n    language = _useTranslation2[1].language;\n  // react router v6 not accepting regex on path yet\n  // https://github.com/remix-run/react-router/issues/8254\n  // const localePath = `:locale(${SUPPORTED_LOCALES.join('|')})`;\n\n  return __jsx(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Route, {\n    path: \"/:locale\",\n    element: __jsx(PageLayout, {\n      isDarkMode: isDarkMode,\n      setDarkMode: setDarkMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Route, {\n    index: true,\n    element: __jsx(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 31\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), __jsx(Route, {\n    path: AppRoute.About,\n    element: __jsx(About, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 47\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), __jsx(Route, {\n    path: AppRoute.ReportIssue,\n    element: __jsx(ReportIssue, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 53\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), __jsx(Route, {\n    path: AppRoute.Restaurants,\n    element: __jsx(Restaurants, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 51\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), __jsx(Route, {\n    path: \"*\",\n    element: __jsx(Navigate, {\n      to: \"/\".concat(language),\n      replace: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}\n_s(Router, \"tKhSeRljp0THdyeXKDjTQgoTSQY=\", false, function () {\n  return [useTranslation];\n});\n_c3 = Router;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SUPPORTED_LOCALES$orderedLocales.map\");\n$RefreshReg$(_c2, \"SUPPORTED_LOCALES\");\n$RefreshReg$(_c3, \"Router\");","map":{"version":3,"names":["ordered","orderedLocales","useTranslation","Navigate","Route","Routes","Restaurants","About","Home","ReportIssue","AppRoute","PageLayout","SUPPORTED_LOCALES","map","code","Router","isDarkMode","setDarkMode","language"],"sources":["/Users/aidandouglas/code/AidanFournier/ratatouille/src/router.tsx"],"sourcesContent":["import { ordered as orderedLocales } from '@tablecheck/locales';\nimport { useTranslation } from 'react-i18next';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport { Restaurants } from 'Pages/Restaurants';\nimport { About } from 'Pages/About';\nimport { Home } from 'Pages/Home';\nimport { ReportIssue } from 'Pages/ReportIssue';\nimport { AppRoute } from 'enums';\n\nimport { PageLayout } from './Layouts/Page';\n\nexport const SUPPORTED_LOCALES = orderedLocales.map(({ code }) => code);\n\nexport function Router({\n  isDarkMode,\n  setDarkMode\n}: {\n  isDarkMode: boolean;\n  setDarkMode: (value: boolean) => void;\n}): JSX.Element {\n  const [, { language }] = useTranslation();\n  // react router v6 not accepting regex on path yet\n  // https://github.com/remix-run/react-router/issues/8254\n  // const localePath = `:locale(${SUPPORTED_LOCALES.join('|')})`;\n\n  return (\n    <Routes>\n      <Route\n        path=\"/:locale\"\n        element={\n          <PageLayout isDarkMode={isDarkMode} setDarkMode={setDarkMode} />\n        }\n      >\n        <Route index element={<Home />} />\n        <Route path={AppRoute.About} element={<About />} />\n        <Route path={AppRoute.ReportIssue} element={<ReportIssue />} />\n      </Route>\n      <Route path={AppRoute.Restaurants} element={<Restaurants />} />\n      <Route path=\"*\" element={<Navigate to={`/${language}`} replace />} />\n    </Routes>\n  );\n}\n"],"mappings":";;;;;AAAA,SAASA,OAAO,IAAIC,cAAc,QAAQ,qBAAqB;AAC/D,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAE1D,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,IAAI,QAAQ,YAAY;AACjC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,QAAQ,QAAQ,OAAO;AAEhC,SAASC,UAAU,QAAQ,gBAAgB;AAE3C,OAAO,IAAMC,iBAAiB,GAAGX,cAAc,CAACY,GAAG,MAAC;EAAA,IAAGC,IAAI,QAAJA,IAAI;EAAA,OAAOA,IAAI;AAAA,EAAC;AAAC,MAA3DF,iBAAiB;AAE9B,OAAO,SAASG,MAAM,QAMN;EAAA;EAAA,IALdC,UAAU,SAAVA,UAAU;IACVC,WAAW,SAAXA,WAAW;EAKX,sBAAyBf,cAAc,EAAE;IAAA;IAA9BgB,QAAQ,uBAARA,QAAQ;EACnB;EACA;EACA;;EAEA,OACE,MAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACL,MAAC,KAAK;IACJ,IAAI,EAAC,UAAU;IACf,OAAO,EACL,MAAC,UAAU;MAAC,UAAU,EAAEF,UAAW;MAAC,WAAW,EAAEC,WAAY;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAC9D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAED,MAAC,KAAK;IAAC,KAAK;IAAC,OAAO,EAAE,MAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAClC,MAAC,KAAK;IAAC,IAAI,EAAEP,QAAQ,CAACH,KAAM;IAAC,OAAO,EAAE,MAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACnD,MAAC,KAAK;IAAC,IAAI,EAAEG,QAAQ,CAACD,WAAY;IAAC,OAAO,EAAE,MAAC,WAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACzD,EACR,MAAC,KAAK;IAAC,IAAI,EAAEC,QAAQ,CAACJ,WAAY;IAAC,OAAO,EAAE,MAAC,WAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC/D,MAAC,KAAK;IAAC,IAAI,EAAC,GAAG;IAAC,OAAO,EAAE,MAAC,QAAQ;MAAC,EAAE,aAAMY,QAAQ,CAAG;MAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC9D;AAEb;AAAC,GA5BeH,MAAM;EAAA,QAOKb,cAAc;AAAA;AAAA,MAPzBa,MAAM;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}