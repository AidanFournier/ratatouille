{"ast":null,"code":"var _jsxFileName = \"/Users/aidandouglas/code/AidanFournier/ratatouille/src/Pages/Restaurants/Modal.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment } from 'react';\nimport { CardButton } from './styles';\nimport { ModalDialog } from '@tablecheck/tablekit-modal-dialog';\nexport function Modal(_ref) {\n  var handleClick = _ref.handleClick,\n    name = _ref.name,\n    address = _ref.address,\n    alt_address = _ref.alt_address,\n    banner_image = _ref.banner_image,\n    body = _ref.body,\n    title = _ref.title,\n    phone = _ref.phone,\n    phone_natl = _ref.phone_natl,\n    stations = _ref.stations,\n    url = _ref.url;\n  return __jsx(ModalDialog, {\n    \"data-testid\": \"Modal Test Id\",\n    hasCloseIcon: true,\n    maxWidth: {\n      \"default\": 200,\n      'min-width: 600px': 400,\n      'min-width: 800px': 700\n    },\n    onCloseAutoFocus: function noRefCheck() {},\n    onEscapeKeyDown: function noRefCheck() {},\n    onOpenAutoFocus: function noRefCheck() {},\n    onPointerDownOutside: function noRefCheck() {},\n    trigger: __jsx(CardButton, {\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 22\n      }\n    }, \"More\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: banner_image,\n    alt: \"Restaurant banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, title[1].locale === 'en' ? title[1].locale : \"\")), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }\n  }, name)));\n}\n_c = Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["Fragment","CardButton","ModalDialog","Modal","handleClick","name","address","alt_address","banner_image","body","title","phone","phone_natl","stations","url","noRefCheck","locale"],"sources":["/Users/aidandouglas/code/AidanFournier/ratatouille/src/Pages/Restaurants/Modal.tsx"],"sourcesContent":["import { Fragment } from 'react';\nimport { Card, CardImg, CardContainer, TagsContainer, CardTitle, ResultsContainer, CardButton, CardTag  } from './styles';\nimport { ModalDialog } from '@tablecheck/tablekit-modal-dialog';\n\ntype ModalProps = {\n    handleClick: () => void,\n    name: string,\n    address: string[],\n    alt_address: string[],\n    banner_image: string,\n    body: string,\n    title: {[key: string]: any},\n    phone: string,\n    phone_natl: string,\n    stations: {[key: string]: any},\n    url: string\n}\n\nexport function Modal ({handleClick, name, address, alt_address, banner_image, body, title, phone, phone_natl, stations, url}: ModalProps) {\n    return (\n        <ModalDialog\n            data-testid=\"Modal Test Id\"\n            hasCloseIcon\n            maxWidth={{\n                default: 200,\n                'min-width: 600px': 400,\n                'min-width: 800px': 700\n            }}\n            onCloseAutoFocus={function noRefCheck(){}}\n            onEscapeKeyDown={function noRefCheck(){}}\n            onOpenAutoFocus={function noRefCheck(){}}\n            onPointerDownOutside={function noRefCheck(){}}\n            trigger={<CardButton onClick={handleClick}>\n            More\n            </CardButton>}\n            >\n            <Fragment>\n                <div className=\"banner\">\n                    <img src={banner_image} alt=\"Restaurant banner\"/>\n                    <h3>{title[1].locale === 'en' ? title[1].locale : \"\"}</h3>\n                    \n        \n                </div>\n                \n               <h1>{name}</h1>\n            </Fragment>\n            </ModalDialog>\n    )\n}"],"mappings":";;;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAmFC,UAAU,QAAkB,UAAU;AACzH,SAASC,WAAW,QAAQ,mCAAmC;AAgB/D,OAAO,SAASC,KAAK,OAAsH;EAAA,IAAnHC,WAAW,QAAXA,WAAW;IAAEC,IAAI,QAAJA,IAAI;IAAEC,OAAO,QAAPA,OAAO;IAAEC,WAAW,QAAXA,WAAW;IAAEC,YAAY,QAAZA,YAAY;IAAEC,IAAI,QAAJA,IAAI;IAAEC,KAAK,QAALA,KAAK;IAAEC,KAAK,QAALA,KAAK;IAAEC,UAAU,QAAVA,UAAU;IAAEC,QAAQ,QAARA,QAAQ;IAAEC,GAAG,QAAHA,GAAG;EACxH,OACI,MAAC,WAAW;IACR,eAAY,eAAe;IAC3B,YAAY;IACZ,QAAQ,EAAE;MACN,WAAS,GAAG;MACZ,kBAAkB,EAAE,GAAG;MACvB,kBAAkB,EAAE;IACxB,CAAE;IACF,gBAAgB,EAAE,SAASC,UAAU,GAAE,CAAC,CAAE;IAC1C,eAAe,EAAE,SAASA,UAAU,GAAE,CAAC,CAAE;IACzC,eAAe,EAAE,SAASA,UAAU,GAAE,CAAC,CAAE;IACzC,oBAAoB,EAAE,SAASA,UAAU,GAAE,CAAC,CAAE;IAC9C,OAAO,EAAE,MAAC,UAAU;MAAC,OAAO,EAAEX,WAAY;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,UAE5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEd,MAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACL;IAAK,SAAS,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACnB;IAAK,GAAG,EAAEI,YAAa;IAAC,GAAG,EAAC,mBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,EACjD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKE,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM,KAAK,IAAI,GAAGN,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM,GAAG,EAAE,CAAM,CAGxD,EAEP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKX,IAAI,CAAM,CACP,CACG;AAE1B;AAAC,KA9BeF,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}